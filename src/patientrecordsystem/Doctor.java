/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package patientrecordsystem;

import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author benja
 */
public class Doctor extends javax.swing.JFrame {

    Connection conn1 = null;
    PreparedStatement p1 = null;
    ResultSet r2 = null;

    public Doctor() {
        initComponents();
        showDate();
        showTime();
        showTableAsses();
    }

    void showDate() {
        Date d = new Date();
        SimpleDateFormat s = new SimpleDateFormat("yyyy-MM-dd");
        jTextField1date.setText(s.format(d));

    }

    void showTime() {
        new Timer(0, (ActionEvent e) -> {
            Date d = new Date();
            SimpleDateFormat s = new SimpleDateFormat("hh:mm:ss");
            jTextFieldtime.setText(s.format(d));
        }).start();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1docLastname = new javax.swing.JTextField();
        jTextField9bp = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jLabel6 = new javax.swing.JLabel();
        jTextField5docpage = new javax.swing.JTextField();
        jButton2perfomdiagnosis = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1asses = new javax.swing.JTable();
        jTextField6pulserate = new javax.swing.JTextField();
        jButton3emailpreview = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextArea2complainsHistory = new javax.swing.JTextArea();
        jButton1logout = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton4dreset = new javax.swing.JButton();
        jButton1asses = new javax.swing.JButton();
        jTextField1date = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField1searchpid = new javax.swing.JTextField();
        jTextField3docfirstname = new javax.swing.JTextField();
        jTextField7temp = new javax.swing.JTextField();
        jTextField4docpid = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea1complains = new javax.swing.JTextArea();
        jLabel14 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldtime = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jComboBox1allergies = new javax.swing.JComboBox<>();
        jTextField8weight = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Date:");

        jTextField1docLastname.setFont(new java.awt.Font("Serif", 3, 12)); // NOI18N
        jTextField1docLastname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1docLastnameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1docLastnameKeyReleased(evt);
            }
        });

        jTextField9bp.setFont(new java.awt.Font("Serif", 3, 12)); // NOI18N
        jTextField9bp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField9bpKeyPressed(evt);
            }
        });

        jLabel15.setText("Enter Patient Id to search:");

        jLabel6.setText("Patient Age:");

        jTextField5docpage.setFont(new java.awt.Font("Serif", 3, 12)); // NOI18N
        jTextField5docpage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField5docpageKeyPressed(evt);
            }
        });

        jButton2perfomdiagnosis.setText("Perfom Diagnosis");
        jButton2perfomdiagnosis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2perfomdiagnosisActionPerformed(evt);
            }
        });

        jTable1asses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10", "Title 11", "Title 12", "Title 13"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, true, true, true, true, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1asses.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1assesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1asses);

        jTextField6pulserate.setFont(new java.awt.Font("Serif", 3, 12)); // NOI18N
        jTextField6pulserate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField6pulserateKeyPressed(evt);
            }
        });

        jButton3emailpreview.setText("Preview Email");
        jButton3emailpreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3emailpreviewActionPerformed(evt);
            }
        });

        jTextArea2complainsHistory.setColumns(20);
        jTextArea2complainsHistory.setFont(new java.awt.Font("Serif", 3, 12)); // NOI18N
        jTextArea2complainsHistory.setLineWrap(true);
        jTextArea2complainsHistory.setRows(5);
        jTextArea2complainsHistory.setWrapStyleWord(true);
        jScrollPane7.setViewportView(jTextArea2complainsHistory);

        jButton1logout.setText("Log out");
        jButton1logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1logoutActionPerformed(evt);
            }
        });

        jLabel3.setText("Time:");

        jButton4dreset.setText("Reset");
        jButton4dreset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4dresetActionPerformed(evt);
            }
        });

        jButton1asses.setText("Add assessment");
        jButton1asses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1assesActionPerformed(evt);
            }
        });

        jTextField1date.setEditable(false);

        jLabel5.setText("Patient Id:");

        jLabel8.setText("Temp (Celsius):");

        jTextField1searchpid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1searchpidKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1searchpidKeyReleased(evt);
            }
        });

        jTextField3docfirstname.setFont(new java.awt.Font("Serif", 3, 12)); // NOI18N
        jTextField3docfirstname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField3docfirstnameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField3docfirstnameKeyReleased(evt);
            }
        });

        jTextField7temp.setFont(new java.awt.Font("Serif", 3, 12)); // NOI18N
        jTextField7temp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField7tempKeyPressed(evt);
            }
        });

        jTextField4docpid.setFont(new java.awt.Font("Serif", 3, 12)); // NOI18N
        jTextField4docpid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField4docpidKeyPressed(evt);
            }
        });

        jLabel11.setText("Allergies:");

        jLabel10.setText("B/P (MMHg):");

        jTextArea1complains.setColumns(20);
        jTextArea1complains.setFont(new java.awt.Font("Serif", 3, 12)); // NOI18N
        jTextArea1complains.setLineWrap(true);
        jTextArea1complains.setRows(5);
        jTextArea1complains.setWrapStyleWord(true);
        jScrollPane6.setViewportView(jTextArea1complains);

        jLabel14.setText("Doctor LastName:");

        jLabel9.setText("Weight (KG):");

        jTextFieldtime.setEditable(false);

        jLabel7.setText("Pulse Rate/MIN:");

        jLabel12.setText("Complains:");

        jComboBox1allergies.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No", "Yes" }));
        jComboBox1allergies.setSelectedIndex(-1);
        jComboBox1allergies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1allergiesActionPerformed(evt);
            }
        });

        jTextField8weight.setFont(new java.awt.Font("Serif", 3, 12)); // NOI18N
        jTextField8weight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField8weightKeyPressed(evt);
            }
        });

        jLabel13.setText("Complain History:");

        jLabel4.setText("Doctor FirstName:");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DOCTOR DASHBOARD");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1allergies, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1asses)
                                .addGap(55, 55, 55)
                                .addComponent(jButton3emailpreview)
                                .addGap(79, 79, 79)
                                .addComponent(jButton2perfomdiagnosis)
                                .addGap(79, 79, 79)
                                .addComponent(jButton4dreset)
                                .addGap(75, 75, 75)
                                .addComponent(jButton1logout))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jTextField3docfirstname, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField4docpid, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jTextField6pulserate, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(93, 93, 93)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addGap(111, 111, 111)
                                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jTextField7temp, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jTextField5docpage, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel14)
                                                .addGap(109, 109, 109)
                                                .addComponent(jTextField1docLastname, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(160, 160, 160)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel10))))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 290, Short.MAX_VALUE)
                                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(149, 149, 149)
                                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(228, 228, 228))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField9bp, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField8weight, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(40, 40, 40)
                                        .addComponent(jTextField1date, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(88, 88, 88)
                                        .addComponent(jLabel3)
                                        .addGap(39, 39, 39)
                                        .addComponent(jTextFieldtime, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addGap(60, 60, 60)
                                        .addComponent(jTextField1searchpid, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(535, 535, 535)
                                        .addComponent(jLabel1)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldtime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jTextField1searchpid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField8weight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3docfirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jTextField1docLastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField4docpid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField5docpage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jTextField9bp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField6pulserate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(jTextField7temp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel7))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jComboBox1allergies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(80, 80, 80)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13))))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1asses, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton3emailpreview)
                                .addComponent(jButton2perfomdiagnosis)
                                .addComponent(jButton4dreset)
                                .addComponent(jButton1logout)))))
                .addContainerGap())
        );

        jScrollPane2.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1assesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1assesActionPerformed
        // TODO add your handling code here:

        if (jTextField3docfirstname.getText().isEmpty() || jTextField1docLastname.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Attending Doctor's Firstname and Lastname  fields cannot be empty!!");

        } else if (jTextField8weight.getText().isEmpty() || jTextField4docpid.getText().isEmpty() || jTextField9bp.getText().isEmpty() || jTextField6pulserate.getText().isEmpty() || jTextField5docpage.getText().isEmpty() || jTextField7temp.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Patient's weight or Id or bloodpressure(bp) or pulserate or age or temerature fields have been left empty!!");

        } else if (jTextArea1complains.getText().isEmpty() || jTextArea2complainsHistory.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Patient's complains or complains history fields have been left empty!!");

        } else if (jComboBox1allergies.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "You must choose whether a patient has allergies or not");

        } else if (jTextField3docfirstname.getText().length() > 20
                || jTextField1docLastname.getText().length() > 20) {
            JOptionPane.showMessageDialog(null, "All name fields should not exceed 20 characters!!");

        } else if (jTextField4docpid.getText().length() > 5) {
            JOptionPane.showMessageDialog(null, "Patient id should not exceed 5 digits!!");

        } else if (jTextField5docpage.getText().length() > 3) {
            JOptionPane.showMessageDialog(null, "Patient age should not exceed 3 digits!!");

        } else if (jTextField7temp.getText().length() > 5) {
            JOptionPane.showMessageDialog(null, "Patient temp should not exceed 5 digits!!");

        } else if (jTextField6pulserate.getText().length() > 4) {
            JOptionPane.showMessageDialog(null, "Patient pulse rate should not exceed 4 digits!!");

        } else if (jTextField8weight.getText().length() > 5) {
            JOptionPane.showMessageDialog(null, "Patient weight should not exceed 5 digits!!");

        } else {
            try {
                String sql2 = "INSERT INTO asses(DocfirstName,Doclastname, patientId, assesDate, assesTime, age, pulse, temperature, weight, bp, allergies, complains, complainHistory) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)";
                conn1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/prs", "root", "");
                p1 = conn1.prepareStatement(sql2);
                p1.setString(1, jTextField3docfirstname.getText());
                p1.setString(2, jTextField1docLastname.getText());
                p1.setString(3, jTextField4docpid.getText());
                p1.setString(4, jTextField1date.getText());
                p1.setString(5, jTextFieldtime.getText());
                p1.setString(6, jTextField5docpage.getText());
                p1.setString(7, jTextField6pulserate.getText());
                p1.setString(8, jTextField7temp.getText());
                p1.setString(9, jTextField8weight.getText());
                p1.setString(10, jTextField9bp.getText());
                p1.setString(11, String.valueOf(jComboBox1allergies.getSelectedItem()));
                p1.setString(12, jTextArea1complains.getText());
                p1.setString(13, jTextArea2complainsHistory.getText());

                p1.executeUpdate();
                JOptionPane.showMessageDialog(null, "Assessment archived successfully!");

            } catch (HeadlessException | SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        }
        showTableAsses();
    }//GEN-LAST:event_jButton1assesActionPerformed

    public void showTableAsses() {
        try {
            conn1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/prs", "root", "");
            String sql2;
            sql2 = "SELECT assesId, DocfirstName, Doclastname, patientId, assesDate, TIME_FORMAT(assesTime,'%h:%i:%s %p')assesTime, age, pulse, temperature, weight, bp, allergies, complains, complainHistory FROM asses";
            p1 = conn1.prepareStatement(sql2);
            r2 = p1.executeQuery();
            jTable1asses.setModel(DbUtils.resultSetToTableModel(r2));

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    private void jButton2perfomdiagnosisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2perfomdiagnosisActionPerformed
        // TODO add your handling code here:

        Diagnosis di = new Diagnosis();
        di.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_jButton2perfomdiagnosisActionPerformed

    private void jTextField1searchpidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1searchpidKeyReleased
        // TODO add your handling code here:
        try {
            conn1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/prs", "root", "");
            String sql2 = "SELECT * FROM asses WHERE patientId=?";
            p1 = conn1.prepareStatement(sql2);
            p1.setString(1, String.valueOf(jTextField1searchpid.getText()));
            r2 = p1.executeQuery();
            jTable1asses.setModel(DbUtils.resultSetToTableModel(r2));

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);

        }
    }//GEN-LAST:event_jTextField1searchpidKeyReleased

    private void jButton3emailpreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3emailpreviewActionPerformed
        // TODO add your handling code here:
        if (jTextField3docfirstname.getText().isEmpty() || jTextField1docLastname.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Attending Doctor's Firstname and Lastname  fields cannot be empty!!");

        } else if (jTextField8weight.getText().isEmpty() || jTextField4docpid.getText().isEmpty() || jTextField9bp.getText().isEmpty() || jTextField6pulserate.getText().isEmpty() || jTextField5docpage.getText().isEmpty() || jTextField7temp.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Patient's weight or Id or bloodpressure(bp) or pulserate or age or temerature fields have been left empty!!");

        } else if (jTextArea1complains.getText().isEmpty() || jTextArea2complainsHistory.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Patient's complains or complains history fields have been left empty!!");

        } else if (jComboBox1allergies.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "You must choose whether a patient has allergies or not");

        } else if (jTextField3docfirstname.getText().length() > 20
                || jTextField1docLastname.getText().length() > 20) {
            JOptionPane.showMessageDialog(null, "All name fields should not exceed 20 characters!!");

        } else if (jTextField4docpid.getText().length() > 5) {
            JOptionPane.showMessageDialog(null, "Patient id should not exceed 5 digits!!");

        } else if (jTextField5docpage.getText().length() > 3) {
            JOptionPane.showMessageDialog(null, "Patient age should not exceed 3 digits!!");

        } else if (jTextField7temp.getText().length() > 5) {
            JOptionPane.showMessageDialog(null, "Patient temp should not exceed 5 digits!!");

        } else if (jTextField6pulserate.getText().length() > 4) {
            JOptionPane.showMessageDialog(null, "Patient pulse rate should not exceed 4 digits!!");

        } else if (jTextField8weight.getText().length() > 5) {
            JOptionPane.showMessageDialog(null, "Patient weight should not exceed 5 digits!!");

        } else {
            Email1 e1 = new Email1();
            e1.setVisible(true);
        }
    }//GEN-LAST:event_jButton3emailpreviewActionPerformed

    private void jButton4dresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4dresetActionPerformed
        // TODO add your handling code here:
        jTextField3docfirstname.setText("");
        jTextField1docLastname.setText("");
        jTextField8weight.setText("");
        jTextField4docpid.setText("");
        jTextField5docpage.setText("");
        jTextField9bp.setText("");

        jTextField6pulserate.setText("");
        jTextField7temp.setText("");
        jTextArea1complains.setText("");
        jTextArea2complainsHistory.setText("");

        jComboBox1allergies.setSelectedIndex(-1);

    }//GEN-LAST:event_jButton4dresetActionPerformed

    private void jComboBox1allergiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1allergiesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1allergiesActionPerformed

    private void jTextField3docfirstnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3docfirstnameKeyPressed
        // TODO add your handling code here:
        char d45 = evt.getKeyChar();
        if (Character.isLetter(d45) || Character.isISOControl(d45)) {
            //accept only letter
            jTextField3docfirstname.setEditable(true);

        } else {
            // deny character
            jTextField3docfirstname.setEditable(false);
            //error message
            JOptionPane.showMessageDialog(null, "Please enter letters only!!");
        }
    }//GEN-LAST:event_jTextField3docfirstnameKeyPressed

    private void jTextField1docLastnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1docLastnameKeyPressed
        // TODO add your handling code here:
        char d46 = evt.getKeyChar();
        if (Character.isLetter(d46) || Character.isISOControl(d46)) {
            //accept only letter
            jTextField1docLastname.setEditable(true);

        } else {
            // deny character
            jTextField1docLastname.setEditable(false);
            //error message
            JOptionPane.showMessageDialog(null, "Please enter letters only!!");
        }
    }//GEN-LAST:event_jTextField1docLastnameKeyPressed

    private void jTextField3docfirstnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3docfirstnameKeyReleased
        // TODO add your handling code here:
        int position45 = jTextField3docfirstname.getCaretPosition();
        jTextField3docfirstname.setText(jTextField3docfirstname.getText().toUpperCase());
        jTextField3docfirstname.setCaretPosition(position45);
    }//GEN-LAST:event_jTextField3docfirstnameKeyReleased

    private void jTextField1docLastnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1docLastnameKeyReleased
        // TODO add your handling code here:
        int position46 = jTextField1docLastname.getCaretPosition();
        jTextField1docLastname.setText(jTextField1docLastname.getText().toUpperCase());
        jTextField1docLastname.setCaretPosition(position46);


    }//GEN-LAST:event_jTextField1docLastnameKeyReleased

    private void jTextField4docpidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4docpidKeyPressed
        // TODO add your handling code here:
        char c45 = evt.getKeyChar();
        if (Character.isLetter(c45)) {
            //can't enter a textfield if entered character is not a number
            jTextField4docpid.setEditable(false);
            //error message
            JOptionPane.showMessageDialog(null, "Please enter a number only!!");

        } else {
            jTextField4docpid.setEditable(true);

        }
    }//GEN-LAST:event_jTextField4docpidKeyPressed

    private void jTextField5docpageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5docpageKeyPressed
        // TODO add your handling code here:
        char c46 = evt.getKeyChar();
        if (Character.isLetter(c46)) {
            //can't enter a textfield if entered character is not a number
            jTextField5docpage.setEditable(false);
            //error message
            JOptionPane.showMessageDialog(null, "Please enter a number only!!");

        } else {
            jTextField5docpage.setEditable(true);

        }
    }//GEN-LAST:event_jTextField5docpageKeyPressed

    private void jTextField8weightKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField8weightKeyPressed
        // TODO add your handling code here:
        char c47 = evt.getKeyChar();
        if (Character.isLetter(c47)) {
            //can't enter a textfield if entered character is not a number
            jTextField8weight.setEditable(false);
            //error message
            JOptionPane.showMessageDialog(null, "Please enter a number only!!");

        } else {
            jTextField8weight.setEditable(true);

        }
    }//GEN-LAST:event_jTextField8weightKeyPressed

    private void jTextField7tempKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField7tempKeyPressed
        // TODO add your handling code here:
        char c48 = evt.getKeyChar();
        if (Character.isLetter(c48)) {
            //can't enter a textfield if entered character is not a number
            jTextField7temp.setEditable(false);
            //error message
            JOptionPane.showMessageDialog(null, "Please enter a number only!!");

        } else {
            jTextField7temp.setEditable(true);

        }
    }//GEN-LAST:event_jTextField7tempKeyPressed

    private void jTextField6pulserateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6pulserateKeyPressed
        // TODO add your handling code here:
        char c49 = evt.getKeyChar();
        if (Character.isLetter(c49)) {
            //can't enter a textfield if entered character is not a number
            jTextField6pulserate.setEditable(false);
            //error message
            JOptionPane.showMessageDialog(null, "Please enter a number only!!");

        } else {
            jTextField6pulserate.setEditable(true);

        }

    }//GEN-LAST:event_jTextField6pulserateKeyPressed

    private void jTextField9bpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField9bpKeyPressed
        // TODO add your handling code here:
        char c50 = evt.getKeyChar();
        if (Character.isLetter(c50)) {
            //can't enter a textfield if entered character is not a number
            jTextField9bp.setEditable(false);
            //error message
            JOptionPane.showMessageDialog(null, "Please enter a number only!!");

        } else {
            jTextField9bp.setEditable(true);

        }
    }//GEN-LAST:event_jTextField9bpKeyPressed

    private void jTextField1searchpidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1searchpidKeyPressed
        // TODO add your handling code here:
        char c51 = evt.getKeyChar();
        if (Character.isLetter(c51)) {
            //can't enter a textfield if entered character is not a number
            jTextField1searchpid.setEditable(false);
            //error message
            JOptionPane.showMessageDialog(null, "Please enter a number only!!");

        } else {
            jTextField1searchpid.setEditable(true);

        }
    }//GEN-LAST:event_jTextField1searchpidKeyPressed

    private void jTable1assesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1assesMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model3 = (DefaultTableModel) jTable1asses.getModel();
        int selectedRowIndex = jTable1asses.getSelectedRow();

        jTextField3docfirstname.setText(model3.getValueAt(selectedRowIndex, 1).toString());
        jTextField1docLastname.setText(model3.getValueAt(selectedRowIndex, 2).toString());
        jTextField4docpid.setText(model3.getValueAt(selectedRowIndex, 3).toString());
        jTextField5docpage.setText(model3.getValueAt(selectedRowIndex, 6).toString());
        jTextField6pulserate.setText(model3.getValueAt(selectedRowIndex, 7).toString());
        jTextField7temp.setText(model3.getValueAt(selectedRowIndex, 8).toString());
       jTextField8weight.setText(model3.getValueAt(selectedRowIndex, 9).toString());
        jTextField9bp.setText(model3.getValueAt(selectedRowIndex, 10).toString());

        jTextArea1complains.setText(model3.getValueAt(selectedRowIndex, 12).toString());
        jTextArea2complainsHistory.setText(model3.getValueAt(selectedRowIndex, 13).toString());

        String combo31 = model3.getValueAt(selectedRowIndex, 11).toString();
        for (int j = 0; j < jComboBox1allergies.getItemCount(); j++) {
           if (jComboBox1allergies.getItemAt(j).equalsIgnoreCase(combo31)) {
               jComboBox1allergies.setSelectedIndex(j);
            }
        }


    }//GEN-LAST:event_jTable1assesMouseClicked

    private void jButton1logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1logoutActionPerformed
        // TODO add your handling code here:
         int p4 = JOptionPane.showConfirmDialog(null, "Are you sure you want to log out?","Log out",JOptionPane.YES_NO_OPTION);
        if(p4 == 0){
        this.dispose();
        Login l2 = new Login();
        l2.setVisible(true);
        }
    }//GEN-LAST:event_jButton1logoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws InstantiationException, IllegalAccessException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {

        } catch (UnsupportedLookAndFeelException ex) {
            ex.printStackTrace();
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Doctor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1asses;
    private javax.swing.JButton jButton1logout;
    private javax.swing.JButton jButton2perfomdiagnosis;
    private javax.swing.JButton jButton3emailpreview;
    private javax.swing.JButton jButton4dreset;
    public static javax.swing.JComboBox<String> jComboBox1allergies;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable jTable1asses;
    public static javax.swing.JTextArea jTextArea1complains;
    public static javax.swing.JTextArea jTextArea2complainsHistory;
    private javax.swing.JTextField jTextField1date;
    public static javax.swing.JTextField jTextField1docLastname;
    private javax.swing.JTextField jTextField1searchpid;
    public static javax.swing.JTextField jTextField3docfirstname;
    public static javax.swing.JTextField jTextField4docpid;
    public static javax.swing.JTextField jTextField5docpage;
    public static javax.swing.JTextField jTextField6pulserate;
    public static javax.swing.JTextField jTextField7temp;
    public static javax.swing.JTextField jTextField8weight;
    public static javax.swing.JTextField jTextField9bp;
    private javax.swing.JTextField jTextFieldtime;
    // End of variables declaration//GEN-END:variables
}
